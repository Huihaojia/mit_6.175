/*
 * Generated by Bluespec Compiler (build 14ff62d)
 * 
 * On Wed Jun 21 21:38:08 CST 2023
 * 
 */
#include "bluesim_primitives.h"
#include "mkTbCSA.h"
#include "imported_BDPI_functions.h"


/* String declarations */
static std::string const __str_literal_2("FAILED %d + %d gave %d instead of %d", 36u);
static std::string const __str_literal_1("PASSED", 6u);


/* Constructor */
MOD_mkTbCSA::MOD_mkTbCSA(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_cycle(simHdl, "cycle", this, 32u, 0u, (tUInt8)0u),
    INST_randomVal1_ignore(simHdl, "randomVal1_ignore", this, 8u, (tUInt8)0u),
    INST_randomVal1_initialized(simHdl, "randomVal1_initialized", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_randomVal1_zaz(simHdl, "randomVal1_zaz", this, 8u, (tUInt8)0u),
    INST_randomVal2_ignore(simHdl, "randomVal2_ignore", this, 8u, (tUInt8)0u),
    INST_randomVal2_initialized(simHdl, "randomVal2_initialized", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_randomVal2_zaz(simHdl, "randomVal2_zaz", this, 8u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_v__h704(2863311530u),
    DEF_v__h315(2863311530u)
{
  symbol_count = 13u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTbCSA::init_symbols_0()
{
  init_symbol(&symbols[0u], "cycle", SYM_MODULE, &INST_cycle);
  init_symbol(&symbols[1u], "RL_randomVal1_every", SYM_RULE);
  init_symbol(&symbols[2u], "RL_randomVal1_every_1", SYM_RULE);
  init_symbol(&symbols[3u], "RL_randomVal2_every", SYM_RULE);
  init_symbol(&symbols[4u], "RL_randomVal2_every_1", SYM_RULE);
  init_symbol(&symbols[5u], "RL_test", SYM_RULE);
  init_symbol(&symbols[6u], "randomVal1_ignore", SYM_MODULE, &INST_randomVal1_ignore);
  init_symbol(&symbols[7u], "randomVal1_initialized", SYM_MODULE, &INST_randomVal1_initialized);
  init_symbol(&symbols[8u], "randomVal1_zaz", SYM_MODULE, &INST_randomVal1_zaz);
  init_symbol(&symbols[9u], "randomVal2_ignore", SYM_MODULE, &INST_randomVal2_ignore);
  init_symbol(&symbols[10u], "randomVal2_initialized", SYM_MODULE, &INST_randomVal2_initialized);
  init_symbol(&symbols[11u], "randomVal2_zaz", SYM_MODULE, &INST_randomVal2_zaz);
  init_symbol(&symbols[12u], "x__h960", SYM_DEF, &DEF_x__h960, 32u);
}


/* Rule actions */

void MOD_mkTbCSA::RL_randomVal1_every()
{
  tUInt8 DEF_new_value__h357;
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_v__h315 = rand32();
  DEF_new_value__h357 = (tUInt8)((tUInt8)255u & DEF_v__h315);
  INST_randomVal1_zaz.METH_wset(DEF_new_value__h357);
}

void MOD_mkTbCSA::RL_randomVal1_every_1()
{
  DEF_x_wget__h250 = INST_randomVal1_zaz.METH_wget();
  DEF_v__h396 = INST_randomVal1_zaz.METH_whas() ? DEF_x_wget__h250 : (tUInt8)0u;
  INST_randomVal1_ignore.METH_wset(DEF_v__h396);
}

void MOD_mkTbCSA::RL_randomVal2_every()
{
  tUInt8 DEF_new_value__h746;
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_v__h704 = rand32();
  DEF_new_value__h746 = (tUInt8)((tUInt8)255u & DEF_v__h704);
  INST_randomVal2_zaz.METH_wset(DEF_new_value__h746);
}

void MOD_mkTbCSA::RL_randomVal2_every_1()
{
  DEF_x_wget__h647 = INST_randomVal2_zaz.METH_wget();
  DEF_v__h784 = INST_randomVal2_zaz.METH_whas() ? DEF_x_wget__h647 : (tUInt8)0u;
  INST_randomVal2_ignore.METH_wset(DEF_v__h784);
}

void MOD_mkTbCSA::RL_test()
{
  tUInt8 DEF_high__h1144;
  tUInt32 DEF_x__h4751;
  tUInt8 DEF_y__h1735;
  tUInt8 DEF_y__h2882;
  tUInt8 DEF_y__h3913;
  tUInt8 DEF_x__h2881;
  tUInt8 DEF_y__h1624;
  tUInt8 DEF_y__h1845;
  tUInt8 DEF_y__h2661;
  tUInt8 DEF_y__h3692;
  tUInt8 DEF_x__h2660;
  tUInt8 DEF_y__h1626;
  tUInt8 DEF_x__h1625;
  tUInt8 DEF_x__h1623;
  tUInt8 DEF_y__h1737;
  tUInt8 DEF_x__h1736;
  tUInt8 DEF_x__h1734;
  tUInt8 DEF_y__h1847;
  tUInt8 DEF_x__h1846;
  tUInt8 DEF_x__h1844;
  tUInt8 DEF_y__h3690;
  tUInt8 DEF_x__h3689;
  tUInt8 DEF_y__h3801;
  tUInt8 DEF_y__h3911;
  tUInt8 DEF_x__h3910;
  tUInt8 DEF_b__h1271;
  tUInt8 DEF_y__h2659;
  tUInt8 DEF_x__h2658;
  tUInt8 DEF_y__h2772;
  tUInt8 DEF_y__h3803;
  tUInt8 DEF_x__h2771;
  tUInt8 DEF_x__h3800;
  tUInt8 DEF_y__h2770;
  tUInt8 DEF_x__h2769;
  tUInt8 DEF_y__h2880;
  tUInt8 DEF_x__h2879;
  tUInt8 DEF_a__h1270;
  tUInt8 DEF_x__h3543;
  tUInt8 DEF_b__h1273;
  tUInt8 DEF_a__h1272;
  tUInt8 DEF_b__h4378;
  tUInt8 DEF_a__h4377;
  tUInt8 DEF_b__h4424;
  tUInt8 DEF_a__h4423;
  tUInt8 DEF_b__h4470;
  tUInt8 DEF_a__h4469;
  tUInt8 DEF_b__h4516;
  tUInt8 DEF_a__h4515;
  tUInt8 DEF_c__h2868;
  tUInt8 DEF_a__h4375;
  tUInt8 DEF_c__h3899;
  tUInt8 DEF_x__h3045;
  tUInt8 DEF_b__h4376;
  tUInt8 DEF_c__h2758;
  tUInt8 DEF_a__h4421;
  tUInt8 DEF_c__h3789;
  tUInt8 DEF_x__h3122;
  tUInt8 DEF_b__h4422;
  tUInt8 DEF_a__h4467;
  tUInt8 DEF_x__h3199;
  tUInt8 DEF_b__h4468;
  tUInt8 DEF_c__h1833;
  tUInt8 DEF_x__h2010;
  tUInt8 DEF_c__h1723;
  tUInt8 DEF_x__h2087;
  tUInt8 DEF_x__h2164;
  tUInt8 DEF_a__h4513;
  tUInt8 DEF_b__h4514;
  tUInt8 DEF_sel__h1147;
  tUInt8 DEF_a__h1274;
  tUInt8 DEF_NOT_cycle_5_EQ_0_6_1_AND_NOT_cycle_5_EQ_128_7__ETC___d135;
  tUInt32 DEF_realAns__h4585;
  tUInt32 DEF_v__h1137;
  tUInt8 DEF_IF_randomVal1_zaz_whas_THEN_randomVal1_zaz_wge_ETC___d61;
  tUInt8 DEF_c__h2647;
  tUInt8 DEF_c__h1612;
  tUInt8 DEF_c__h3678;
  tUInt8 DEF_b__h1463;
  tUInt8 DEF_b__h1611;
  tUInt8 DEF_b__h1722;
  tUInt8 DEF_b__h1832;
  tUInt8 DEF_b__h2498;
  tUInt8 DEF_b__h2646;
  tUInt8 DEF_b__h2757;
  tUInt8 DEF_b__h2867;
  tUInt8 DEF_a__h1462;
  tUInt8 DEF_a__h1610;
  tUInt8 DEF_a__h1721;
  tUInt8 DEF_a__h1831;
  tUInt8 DEF_a__h2497;
  tUInt8 DEF_a__h2645;
  tUInt8 DEF_a__h2756;
  tUInt8 DEF_a__h2866;
  DEF_x__h960 = INST_cycle.METH_read();
  DEF_x_wget__h647 = INST_randomVal2_zaz.METH_wget();
  DEF_x_wget__h250 = INST_randomVal1_zaz.METH_wget();
  DEF_v__h396 = INST_randomVal1_zaz.METH_whas() ? DEF_x_wget__h250 : (tUInt8)0u;
  DEF_a__h2866 = (tUInt8)(DEF_v__h396 >> 7u);
  DEF_a__h2756 = (tUInt8)((tUInt8)1u & (DEF_v__h396 >> 6u));
  DEF_a__h2645 = (tUInt8)((tUInt8)1u & (DEF_v__h396 >> 5u));
  DEF_a__h2497 = (tUInt8)((tUInt8)1u & (DEF_v__h396 >> 4u));
  DEF_a__h1831 = (tUInt8)((tUInt8)1u & (DEF_v__h396 >> 3u));
  DEF_a__h1721 = (tUInt8)((tUInt8)1u & (DEF_v__h396 >> 2u));
  DEF_a__h1610 = (tUInt8)((tUInt8)1u & (DEF_v__h396 >> 1u));
  DEF_a__h1462 = (tUInt8)((tUInt8)1u & DEF_v__h396);
  DEF_v__h784 = INST_randomVal2_zaz.METH_whas() ? DEF_x_wget__h647 : (tUInt8)0u;
  DEF_b__h2867 = (tUInt8)(DEF_v__h784 >> 7u);
  DEF_b__h2757 = (tUInt8)((tUInt8)1u & (DEF_v__h784 >> 6u));
  DEF_b__h2646 = (tUInt8)((tUInt8)1u & (DEF_v__h784 >> 5u));
  DEF_b__h2498 = (tUInt8)((tUInt8)1u & (DEF_v__h784 >> 4u));
  DEF_b__h1832 = (tUInt8)((tUInt8)1u & (DEF_v__h784 >> 3u));
  DEF_b__h1722 = (tUInt8)((tUInt8)1u & (DEF_v__h784 >> 2u));
  DEF_b__h1463 = (tUInt8)((tUInt8)1u & DEF_v__h784);
  DEF_b__h1611 = (tUInt8)((tUInt8)1u & (DEF_v__h784 >> 1u));
  DEF_c__h1612 = (tUInt8)((tUInt8)1u & ((DEF_a__h1462 & DEF_b__h1463 ? (tUInt8)2u : (tUInt8)0u) >> 1u));
  DEF_IF_randomVal1_zaz_whas_THEN_randomVal1_zaz_wge_ETC___d61 = DEF_a__h2497 & DEF_b__h2498;
  DEF_c__h2647 = (tUInt8)((tUInt8)1u & ((DEF_IF_randomVal1_zaz_whas_THEN_randomVal1_zaz_wge_ETC___d61 ? (tUInt8)2u : (tUInt8)0u) >> 1u));
  DEF_cycle_5_EQ_128___d17 = DEF_x__h960 == 128u;
  DEF_cycle_5_EQ_0___d16 = DEF_x__h960 == 0u;
  DEF_realAns__h4585 = 511u & ((511u & ((((tUInt32)((tUInt8)0u)) << 8u) | (tUInt32)(DEF_v__h396))) + (511u & ((((tUInt32)((tUInt8)0u)) << 8u) | (tUInt32)(DEF_v__h784))));
  DEF_a__h4513 = DEF_a__h2497 ^ DEF_b__h2498;
  DEF_b__h4514 = (tUInt8)1u & ~DEF_a__h4513;
  DEF_x__h2164 = DEF_a__h1610 ^ DEF_b__h1611;
  DEF_x__h2087 = DEF_a__h1721 ^ DEF_b__h1722;
  DEF_x__h2010 = DEF_a__h1831 ^ DEF_b__h1832;
  DEF_x__h3199 = DEF_a__h2645 ^ DEF_b__h2646;
  DEF_a__h4467 = DEF_x__h3199 ^ DEF_c__h2647;
  DEF_x__h3122 = DEF_a__h2756 ^ DEF_b__h2757;
  DEF_x__h3045 = DEF_a__h2866 ^ DEF_b__h2867;
  DEF_x__h3543 = DEF_IF_randomVal1_zaz_whas_THEN_randomVal1_zaz_wge_ETC___d61 | DEF_a__h2497;
  DEF_c__h3678 = (tUInt8)((tUInt8)1u & ((DEF_x__h3543 | DEF_b__h2498 ? (tUInt8)3u : (tUInt8)1u) >> 1u));
  DEF_b__h4468 = DEF_x__h3199 ^ DEF_c__h3678;
  DEF_x__h2771 = DEF_a__h2756 & DEF_b__h2757;
  DEF_y__h2659 = DEF_b__h2646 & DEF_c__h2647;
  DEF_y__h3690 = DEF_b__h2646 & DEF_c__h3678;
  DEF_x__h1846 = DEF_a__h1831 & DEF_b__h1832;
  DEF_x__h1736 = DEF_a__h1721 & DEF_b__h1722;
  DEF_x__h1625 = DEF_a__h1610 & DEF_b__h1611;
  DEF_y__h1626 = DEF_a__h1610 & DEF_c__h1612;
  DEF_x__h1623 = DEF_x__h1625 | DEF_y__h1626;
  DEF_x__h2660 = DEF_a__h2645 & DEF_b__h2646;
  DEF_y__h3692 = DEF_a__h2645 & DEF_c__h3678;
  DEF_x__h3689 = DEF_x__h2660 | DEF_y__h3692;
  DEF_c__h3789 = DEF_x__h3689 | DEF_y__h3690;
  DEF_b__h4422 = DEF_x__h3122 ^ DEF_c__h3789;
  DEF_y__h3803 = DEF_a__h2756 & DEF_c__h3789;
  DEF_x__h3800 = DEF_x__h2771 | DEF_y__h3803;
  DEF_y__h3801 = DEF_b__h2757 & DEF_c__h3789;
  DEF_c__h3899 = DEF_x__h3800 | DEF_y__h3801;
  DEF_b__h4376 = DEF_x__h3045 ^ DEF_c__h3899;
  DEF_y__h3911 = DEF_b__h2867 & DEF_c__h3899;
  DEF_y__h2661 = DEF_a__h2645 & DEF_c__h2647;
  DEF_x__h2658 = DEF_x__h2660 | DEF_y__h2661;
  DEF_c__h2758 = DEF_x__h2658 | DEF_y__h2659;
  DEF_a__h4421 = DEF_x__h3122 ^ DEF_c__h2758;
  DEF_y__h2770 = DEF_b__h2757 & DEF_c__h2758;
  DEF_y__h2772 = DEF_a__h2756 & DEF_c__h2758;
  DEF_x__h2769 = DEF_x__h2771 | DEF_y__h2772;
  DEF_c__h2868 = DEF_x__h2769 | DEF_y__h2770;
  DEF_a__h4375 = DEF_x__h3045 ^ DEF_c__h2868;
  DEF_y__h2880 = DEF_b__h2867 & DEF_c__h2868;
  DEF_y__h1624 = DEF_b__h1611 & DEF_c__h1612;
  DEF_c__h1723 = DEF_x__h1623 | DEF_y__h1624;
  DEF_y__h1737 = DEF_a__h1721 & DEF_c__h1723;
  DEF_x__h1734 = DEF_x__h1736 | DEF_y__h1737;
  DEF_x__h2881 = DEF_a__h2866 & DEF_b__h2867;
  DEF_y__h3913 = DEF_a__h2866 & DEF_c__h3899;
  DEF_x__h3910 = DEF_x__h2881 | DEF_y__h3913;
  DEF_b__h1271 = DEF_x__h3910 | DEF_y__h3911;
  DEF_y__h2882 = DEF_a__h2866 & DEF_c__h2868;
  DEF_x__h2879 = DEF_x__h2881 | DEF_y__h2882;
  DEF_a__h1270 = DEF_x__h2879 | DEF_y__h2880;
  DEF_y__h1735 = DEF_b__h1722 & DEF_c__h1723;
  DEF_c__h1833 = DEF_x__h1734 | DEF_y__h1735;
  DEF_y__h1847 = DEF_a__h1831 & DEF_c__h1833;
  DEF_x__h1844 = DEF_x__h1846 | DEF_y__h1847;
  DEF_y__h1845 = DEF_b__h1832 & DEF_c__h1833;
  DEF_sel__h1147 = DEF_x__h1844 | DEF_y__h1845;
  DEF_a__h1274 = (tUInt8)1u & ~DEF_sel__h1147;
  DEF_a__h4515 = DEF_a__h1274 & DEF_a__h4513;
  DEF_b__h4516 = DEF_sel__h1147 & DEF_b__h4514;
  DEF_a__h4469 = DEF_a__h1274 & DEF_a__h4467;
  DEF_b__h4470 = DEF_sel__h1147 & DEF_b__h4468;
  DEF_a__h4423 = DEF_a__h1274 & DEF_a__h4421;
  DEF_b__h4424 = DEF_sel__h1147 & DEF_b__h4422;
  DEF_b__h4378 = DEF_sel__h1147 & DEF_b__h4376;
  DEF_a__h4377 = DEF_a__h1274 & DEF_a__h4375;
  DEF_a__h1272 = DEF_a__h1274 & DEF_a__h1270;
  DEF_b__h1273 = DEF_sel__h1147 & DEF_b__h1271;
  DEF_x__h4751 = DEF_x__h960 + 1u;
  DEF_high__h1144 = (tUInt8)31u & ((((((DEF_a__h1272 | DEF_b__h1273) << 4u) | ((DEF_a__h4377 | DEF_b__h4378) << 3u)) | ((DEF_a__h4423 | DEF_b__h4424) << 2u)) | ((DEF_a__h4469 | DEF_b__h4470) << 1u)) | (DEF_a__h4515 | DEF_b__h4516));
  DEF_v__h1137 = 511u & (((((((tUInt32)(DEF_high__h1144)) << 4u) | (((tUInt32)(DEF_x__h2010 ^ DEF_c__h1833)) << 3u)) | (((tUInt32)(DEF_x__h2087 ^ DEF_c__h1723)) << 2u)) | (((tUInt32)(DEF_x__h2164 ^ DEF_c__h1612)) << 1u)) | (tUInt32)(DEF_a__h1462 ^ DEF_b__h1463));
  DEF_NOT_cycle_5_EQ_0_6_1_AND_NOT_cycle_5_EQ_128_7__ETC___d135 = !DEF_cycle_5_EQ_0___d16 && (!DEF_cycle_5_EQ_128___d17 && !(DEF_v__h1137 == DEF_realAns__h4585));
  if (DEF_cycle_5_EQ_0___d16)
    INST_randomVal1_initialized.METH_write((tUInt8)1u);
  if (DEF_cycle_5_EQ_0___d16)
    INST_randomVal2_initialized.METH_write((tUInt8)1u);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_cycle_5_EQ_128___d17)
      dollar_display(sim_hdl, this, "s", &__str_literal_1);
    if (DEF_cycle_5_EQ_128___d17)
      dollar_finish(sim_hdl, "32", 1u);
    if (DEF_NOT_cycle_5_EQ_0_6_1_AND_NOT_cycle_5_EQ_128_7__ETC___d135)
      dollar_display(sim_hdl,
		     this,
		     "s,8,8,9,9",
		     &__str_literal_2,
		     DEF_v__h396,
		     DEF_v__h784,
		     DEF_v__h1137,
		     DEF_realAns__h4585);
    if (DEF_NOT_cycle_5_EQ_0_6_1_AND_NOT_cycle_5_EQ_128_7__ETC___d135)
      dollar_finish(sim_hdl, "32", 1u);
  }
  INST_cycle.METH_write(DEF_x__h4751);
}


/* Methods */


/* Reset routines */

void MOD_mkTbCSA::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_randomVal2_initialized.reset_RST(ARG_rst_in);
  INST_randomVal1_initialized.reset_RST(ARG_rst_in);
  INST_cycle.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTbCSA::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTbCSA::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_cycle.dump_state(indent + 2u);
  INST_randomVal1_ignore.dump_state(indent + 2u);
  INST_randomVal1_initialized.dump_state(indent + 2u);
  INST_randomVal1_zaz.dump_state(indent + 2u);
  INST_randomVal2_ignore.dump_state(indent + 2u);
  INST_randomVal2_initialized.dump_state(indent + 2u);
  INST_randomVal2_zaz.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTbCSA::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 17u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cycle_5_EQ_0___d16", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cycle_5_EQ_128___d17", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h315", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h396", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h704", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h784", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h960", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x_wget__h250", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x_wget__h647", 8u);
  num = INST_cycle.dump_VCD_defs(num);
  num = INST_randomVal1_ignore.dump_VCD_defs(num);
  num = INST_randomVal1_initialized.dump_VCD_defs(num);
  num = INST_randomVal1_zaz.dump_VCD_defs(num);
  num = INST_randomVal2_ignore.dump_VCD_defs(num);
  num = INST_randomVal2_initialized.dump_VCD_defs(num);
  num = INST_randomVal2_zaz.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTbCSA::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbCSA &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkTbCSA::vcd_defs(tVCDDumpType dt, MOD_mkTbCSA &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 8u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_cycle_5_EQ_0___d16) != DEF_cycle_5_EQ_0___d16)
      {
	vcd_write_val(sim_hdl, num, DEF_cycle_5_EQ_0___d16, 1u);
	backing.DEF_cycle_5_EQ_0___d16 = DEF_cycle_5_EQ_0___d16;
      }
      ++num;
      if ((backing.DEF_cycle_5_EQ_128___d17) != DEF_cycle_5_EQ_128___d17)
      {
	vcd_write_val(sim_hdl, num, DEF_cycle_5_EQ_128___d17, 1u);
	backing.DEF_cycle_5_EQ_128___d17 = DEF_cycle_5_EQ_128___d17;
      }
      ++num;
      if ((backing.DEF_v__h315) != DEF_v__h315)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h315, 32u);
	backing.DEF_v__h315 = DEF_v__h315;
      }
      ++num;
      if ((backing.DEF_v__h396) != DEF_v__h396)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h396, 8u);
	backing.DEF_v__h396 = DEF_v__h396;
      }
      ++num;
      if ((backing.DEF_v__h704) != DEF_v__h704)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h704, 32u);
	backing.DEF_v__h704 = DEF_v__h704;
      }
      ++num;
      if ((backing.DEF_v__h784) != DEF_v__h784)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h784, 8u);
	backing.DEF_v__h784 = DEF_v__h784;
      }
      ++num;
      if ((backing.DEF_x__h960) != DEF_x__h960)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h960, 32u);
	backing.DEF_x__h960 = DEF_x__h960;
      }
      ++num;
      if ((backing.DEF_x_wget__h250) != DEF_x_wget__h250)
      {
	vcd_write_val(sim_hdl, num, DEF_x_wget__h250, 8u);
	backing.DEF_x_wget__h250 = DEF_x_wget__h250;
      }
      ++num;
      if ((backing.DEF_x_wget__h647) != DEF_x_wget__h647)
      {
	vcd_write_val(sim_hdl, num, DEF_x_wget__h647, 8u);
	backing.DEF_x_wget__h647 = DEF_x_wget__h647;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_cycle_5_EQ_0___d16, 1u);
      backing.DEF_cycle_5_EQ_0___d16 = DEF_cycle_5_EQ_0___d16;
      vcd_write_val(sim_hdl, num++, DEF_cycle_5_EQ_128___d17, 1u);
      backing.DEF_cycle_5_EQ_128___d17 = DEF_cycle_5_EQ_128___d17;
      vcd_write_val(sim_hdl, num++, DEF_v__h315, 32u);
      backing.DEF_v__h315 = DEF_v__h315;
      vcd_write_val(sim_hdl, num++, DEF_v__h396, 8u);
      backing.DEF_v__h396 = DEF_v__h396;
      vcd_write_val(sim_hdl, num++, DEF_v__h704, 32u);
      backing.DEF_v__h704 = DEF_v__h704;
      vcd_write_val(sim_hdl, num++, DEF_v__h784, 8u);
      backing.DEF_v__h784 = DEF_v__h784;
      vcd_write_val(sim_hdl, num++, DEF_x__h960, 32u);
      backing.DEF_x__h960 = DEF_x__h960;
      vcd_write_val(sim_hdl, num++, DEF_x_wget__h250, 8u);
      backing.DEF_x_wget__h250 = DEF_x_wget__h250;
      vcd_write_val(sim_hdl, num++, DEF_x_wget__h647, 8u);
      backing.DEF_x_wget__h647 = DEF_x_wget__h647;
    }
}

void MOD_mkTbCSA::vcd_prims(tVCDDumpType dt, MOD_mkTbCSA &backing)
{
  INST_cycle.dump_VCD(dt, backing.INST_cycle);
  INST_randomVal1_ignore.dump_VCD(dt, backing.INST_randomVal1_ignore);
  INST_randomVal1_initialized.dump_VCD(dt, backing.INST_randomVal1_initialized);
  INST_randomVal1_zaz.dump_VCD(dt, backing.INST_randomVal1_zaz);
  INST_randomVal2_ignore.dump_VCD(dt, backing.INST_randomVal2_ignore);
  INST_randomVal2_initialized.dump_VCD(dt, backing.INST_randomVal2_initialized);
  INST_randomVal2_zaz.dump_VCD(dt, backing.INST_randomVal2_zaz);
}
