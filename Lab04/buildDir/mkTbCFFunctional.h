/*
 * Generated by Bluespec Compiler (build 14ff62d)
 * 
 * On Mon Jul 10 00:56:52 CST 2023
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkTbCFFunctional_h__
#define __mkTbCFFunctional_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTbCFFunctional module */
class MOD_mkTbCFFunctional : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_fifo_deqBuf_ehrReg;
  MOD_Wire<tUInt8> INST_fifo_deqBuf_ignored_wires_0;
  MOD_Wire<tUInt8> INST_fifo_deqBuf_ignored_wires_1;
  MOD_Reg<tUInt8> INST_fifo_deqBuf_virtual_reg_0;
  MOD_Reg<tUInt8> INST_fifo_deqBuf_virtual_reg_1;
  MOD_Wire<tUInt8> INST_fifo_deqBuf_wires_0;
  MOD_Wire<tUInt8> INST_fifo_deqBuf_wires_1;
  MOD_Reg<tUInt8> INST_fifo_deqPtr_ehrReg;
  MOD_Wire<tUInt8> INST_fifo_deqPtr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_fifo_deqPtr_ignored_wires_1;
  MOD_Reg<tUInt8> INST_fifo_deqPtr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_fifo_deqPtr_virtual_reg_1;
  MOD_Wire<tUInt8> INST_fifo_deqPtr_wires_0;
  MOD_Wire<tUInt8> INST_fifo_deqPtr_wires_1;
  MOD_Reg<tUInt32> INST_fifo_enqBuf_ehrReg;
  MOD_Wire<tUInt32> INST_fifo_enqBuf_ignored_wires_0;
  MOD_Wire<tUInt32> INST_fifo_enqBuf_ignored_wires_1;
  MOD_Reg<tUInt8> INST_fifo_enqBuf_virtual_reg_0;
  MOD_Reg<tUInt8> INST_fifo_enqBuf_virtual_reg_1;
  MOD_Wire<tUInt32> INST_fifo_enqBuf_wires_0;
  MOD_Wire<tUInt32> INST_fifo_enqBuf_wires_1;
  MOD_Reg<tUInt8> INST_fifo_enqPtr_ehrReg;
  MOD_Wire<tUInt8> INST_fifo_enqPtr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_fifo_enqPtr_ignored_wires_1;
  MOD_Reg<tUInt8> INST_fifo_enqPtr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_fifo_enqPtr_virtual_reg_1;
  MOD_Wire<tUInt8> INST_fifo_enqPtr_wires_0;
  MOD_Wire<tUInt8> INST_fifo_enqPtr_wires_1;
  MOD_Reg<tUInt8> INST_fifo_nEmpty_ehrReg;
  MOD_Wire<tUInt8> INST_fifo_nEmpty_ignored_wires_0;
  MOD_Wire<tUInt8> INST_fifo_nEmpty_ignored_wires_1;
  MOD_Reg<tUInt8> INST_fifo_nEmpty_virtual_reg_0;
  MOD_Reg<tUInt8> INST_fifo_nEmpty_virtual_reg_1;
  MOD_Wire<tUInt8> INST_fifo_nEmpty_wires_0;
  MOD_Wire<tUInt8> INST_fifo_nEmpty_wires_1;
  MOD_Reg<tUInt8> INST_fifo_nFull_ehrReg;
  MOD_Wire<tUInt8> INST_fifo_nFull_ignored_wires_0;
  MOD_Wire<tUInt8> INST_fifo_nFull_ignored_wires_1;
  MOD_Reg<tUInt8> INST_fifo_nFull_virtual_reg_0;
  MOD_Reg<tUInt8> INST_fifo_nFull_virtual_reg_1;
  MOD_Wire<tUInt8> INST_fifo_nFull_wires_0;
  MOD_Wire<tUInt8> INST_fifo_nFull_wires_1;
  MOD_Reg<tUInt8> INST_fifo_regs_0;
  MOD_Reg<tUInt8> INST_fifo_regs_1;
  MOD_Reg<tUInt8> INST_fifo_regs_2;
  MOD_Reg<tUInt32> INST_m_cycle;
  MOD_Reg<tUInt32> INST_m_input_count;
  MOD_Reg<tUInt32> INST_m_output_count;
  MOD_Wire<tUInt8> INST_m_randomA_ignore;
  MOD_Reg<tUInt8> INST_m_randomA_initialized;
  MOD_Wire<tUInt8> INST_m_randomA_zaz;
  MOD_Wire<tUInt8> INST_m_randomB_ignore;
  MOD_Reg<tUInt8> INST_m_randomB_initialized;
  MOD_Wire<tUInt8> INST_m_randomB_zaz;
  MOD_Wire<tUInt8> INST_m_randomC_ignore;
  MOD_Reg<tUInt8> INST_m_randomC_initialized;
  MOD_Wire<tUInt8> INST_m_randomC_zaz;
  MOD_Wire<tUInt8> INST_m_randomData_ignore;
  MOD_Reg<tUInt8> INST_m_randomData_initialized;
  MOD_Wire<tUInt8> INST_m_randomData_zaz;
  MOD_Reg<tUInt32> INST_m_ref_fifo_ehrReg;
  MOD_Reg<tUInt8> INST_m_ref_fifo_ehrReg_1;
  MOD_Reg<tUInt8> INST_m_ref_fifo_ehrReg_2;
  MOD_Reg<tUInt8> INST_m_ref_fifo_ehrReg_3;
  MOD_Reg<tUInt8> INST_m_ref_fifo_ehrReg_4;
  MOD_Wire<tUInt32> INST_m_ref_fifo_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_0_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_0_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_0_3;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_0_4;
  MOD_Wire<tUInt32> INST_m_ref_fifo_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_1_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_1_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_1_3;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_1_4;
  MOD_Wire<tUInt32> INST_m_ref_fifo_ignored_wires_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_2_1;
  MOD_Fifo<tUInt8> INST_m_ref_fifo_ref_noncf_fifo;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_0_1;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_0_2;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_0_3;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_0_4;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_1_1;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_1_2;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_1_3;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_1_4;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_2;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_2_1;
  MOD_Wire<tUInt32> INST_m_ref_fifo_wires_0;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_0_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_0_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_0_3;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_0_4;
  MOD_Wire<tUInt32> INST_m_ref_fifo_wires_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_1_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_1_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_1_3;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_1_4;
  MOD_Wire<tUInt32> INST_m_ref_fifo_wires_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_2_1;
 
 /* Constructor */
 public:
  MOD_mkTbCFFunctional(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_m_cycle_inc;
  tUInt8 DEF_CAN_FIRE_RL_m_cycle_inc;
  tUInt8 DEF_WILL_FIRE_RL_m_stop_tb;
  tUInt8 DEF_CAN_FIRE_RL_m_stop_tb;
  tUInt8 DEF_WILL_FIRE_RL_m_check_fifos_first;
  tUInt8 DEF_CAN_FIRE_RL_m_check_fifos_first;
  tUInt8 DEF_WILL_FIRE_RL_m_check_fifos_not_empty;
  tUInt8 DEF_CAN_FIRE_RL_m_check_fifos_not_empty;
  tUInt8 DEF_WILL_FIRE_RL_m_check_fifos_not_full;
  tUInt8 DEF_CAN_FIRE_RL_m_check_fifos_not_full;
  tUInt8 DEF_WILL_FIRE_RL_m_maybe_clear;
  tUInt8 DEF_CAN_FIRE_RL_m_maybe_clear;
  tUInt8 DEF_WILL_FIRE_RL_m_check_outputs;
  tUInt8 DEF_CAN_FIRE_RL_m_check_outputs;
  tUInt8 DEF_WILL_FIRE_RL_m_feed_inputs;
  tUInt8 DEF_CAN_FIRE_RL_m_feed_inputs;
  tUInt8 DEF_WILL_FIRE_RL_m_init;
  tUInt8 DEF_CAN_FIRE_RL_m_init;
  tUInt8 DEF_WILL_FIRE_RL_m_cycle_print;
  tUInt8 DEF_CAN_FIRE_RL_m_cycle_print;
  tUInt8 DEF_WILL_FIRE_RL_m_randomData_every_1;
  tUInt8 DEF_CAN_FIRE_RL_m_randomData_every_1;
  tUInt8 DEF_WILL_FIRE_RL_m_randomData_every;
  tUInt8 DEF_CAN_FIRE_RL_m_randomData_every;
  tUInt8 DEF_WILL_FIRE_RL_m_randomC_every_1;
  tUInt8 DEF_CAN_FIRE_RL_m_randomC_every_1;
  tUInt8 DEF_WILL_FIRE_RL_m_randomC_every;
  tUInt8 DEF_CAN_FIRE_RL_m_randomC_every;
  tUInt8 DEF_WILL_FIRE_RL_m_randomB_every_1;
  tUInt8 DEF_CAN_FIRE_RL_m_randomB_every_1;
  tUInt8 DEF_WILL_FIRE_RL_m_randomB_every;
  tUInt8 DEF_CAN_FIRE_RL_m_randomB_every;
  tUInt8 DEF_WILL_FIRE_RL_m_randomA_every_1;
  tUInt8 DEF_CAN_FIRE_RL_m_randomA_every_1;
  tUInt8 DEF_WILL_FIRE_RL_m_randomA_every;
  tUInt8 DEF_CAN_FIRE_RL_m_randomA_every;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_post_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_post_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_pre_canonicalize_two;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_pre_canonicalize_two;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_pre_canonicalize_one;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_pre_canonicalize_one;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_canonicalize_4;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_canonicalize_4;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_canonicalize_3;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_canonicalize_3;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_canonicalize_2;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_canonicalize_2;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_canonicalize_1;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_canonicalize_1;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_fifo_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_fifo_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_fifo_nFull_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_fifo_nFull_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_fifo_nEmpty_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_fifo_nEmpty_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_fifo_enqBuf_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_fifo_enqBuf_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_fifo_deqBuf_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_fifo_deqBuf_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_fifo_deqPtr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_fifo_deqPtr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_fifo_enqPtr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_fifo_enqPtr_canonicalize;
  tUInt8 DEF_fifo_nEmpty_ehrReg__h4469;
  tUInt8 DEF_fifo_nFull_ehrReg__h5305;
  tUInt8 DEF_m_ref_fifo_virtual_reg_2_read____d217;
  tUInt8 DEF_m_ref_fifo_virtual_reg_1_read____d218;
  tUInt8 DEF_fifo_nEmpty_virtual_reg_1_read____d65;
  tUInt8 DEF_fifo_nEmpty_virtual_reg_0_read____d67;
  tUInt8 DEF_fifo_nFull_virtual_reg_1_read____d72;
  tUInt8 DEF_fifo_nFull_virtual_reg_0_read____d74;
  tUInt32 DEF_x__h21129;
  tUInt32 DEF_x__h21277;
  tUInt32 DEF_m_ref_fifo_wires_0_wget____d139;
  tUInt32 DEF_m_ref_fifo_ehrReg___d141;
  tUInt8 DEF_x_wget__h17817;
  tUInt8 DEF_x_wget__h17428;
  tUInt8 DEF_m_ref_fifo_wires_0_1_wget____d169;
  tUInt8 DEF_m_ref_fifo_ehrReg_1___d171;
  tUInt8 DEF_m_ref_fifo_ehrReg_4__h14556;
  tUInt8 DEF_m_ref_fifo_ehrReg_3__h13720;
  tUInt8 DEF_m_ref_fifo_virtual_reg_2_1_read____d223;
  tUInt8 DEF_m_ref_fifo_virtual_reg_1_1_read____d224;
  tUInt8 DEF_m_ref_fifo_wires_0_1_whas____d168;
  tUInt8 DEF_m_ref_fifo_wires_0_whas____d138;
  tUInt8 DEF_m_ref_fifo_ehrReg_41_BIT_8___d142;
  tUInt8 DEF_m_ref_fifo_wires_0_wget__39_BIT_8___d140;
  tUInt8 DEF_m_ref_fifo_ehrReg_1_71_BIT_1___d172;
  tUInt8 DEF_m_ref_fifo_wires_0_1_wget__69_BIT_1___d170;
  tUInt8 DEF_v__h17954;
  tUInt8 DEF_v__h17565;
  tUInt8 DEF_IF_m_ref_fifo_wires_0_4_whas__08_THEN_m_ref_fi_ETC___d211;
  tUInt8 DEF_IF_m_ref_fifo_wires_0_3_whas__01_THEN_m_ref_fi_ETC___d204;
  tUInt8 DEF_m_input_count_81_EQ_1024___d329;
  tUInt8 DEF_IF_m_randomB_zaz_whas__54_THEN_m_randomB_zaz_w_ETC___d291;
  tUInt8 DEF_IF_m_randomA_zaz_whas__47_THEN_m_randomA_zaz_w_ETC___d273;
  tUInt8 DEF_NOT_m_ref_fifo_virtual_reg_1_4_read__92_93_AND_ETC___d294;
  tUInt8 DEF_NOT_fifo_nEmpty_virtual_reg_1_read__5_6_AND_NO_ETC___d70;
  tUInt8 DEF_NOT_m_ref_fifo_virtual_reg_1_3_read__74_75_AND_ETC___d276;
  tUInt8 DEF_NOT_fifo_nFull_virtual_reg_1_read__2_3_AND_NOT_ETC___d77;
 
 /* Local definitions */
 private:
  tUInt8 DEF_fifo_nEmpty_virtual_reg_1_read__5_OR_fifo_nEmp_ETC___d103;
  tUInt8 DEF_IF_fifo_enqBuf_wires_0_whas__5_THEN_fifo_enqBu_ETC___d30;
  tUInt8 DEF_IF_fifo_deqBuf_wires_0_whas__7_THEN_fifo_deqBu_ETC___d20;
  tUInt32 DEF_v__h18651;
  tUInt32 DEF_v__h18261;
  tUInt32 DEF_v__h17874;
  tUInt32 DEF_v__h17485;
  tUInt32 DEF_x__h20142;
  tUInt32 DEF_fifo_enqBuf_wires_0_wget____d26;
  tUInt32 DEF_fifo_enqBuf_ehrReg___d28;
  tUInt8 DEF_x_wget__h18594;
  tUInt8 DEF_def__h20024;
  tUInt8 DEF__read__h256;
  tUInt8 DEF__read__h225;
  tUInt8 DEF__read__h194;
  tUInt8 DEF_x_wget__h18204;
  tUInt8 DEF_def__h20472;
  tUInt8 DEF_def__h20322;
  tUInt8 DEF_fifo_enqBuf_wires_0_whas____d25;
  tUInt8 DEF_fifo_deqBuf_wires_0_whas____d17;
  tUInt8 DEF_fifo_deqBuf_wires_0_wget____d18;
  tUInt8 DEF_fifo_deqBuf_ehrReg__h2697;
  tUInt8 DEF_x__h10802;
  tUInt8 DEF_x__h10803;
  tUInt8 DEF_x__h3649;
  tUInt8 DEF_x__h3650;
  tUInt8 DEF_fifo_enqBuf_ehrReg_8_BIT_8___d29;
  tUInt8 DEF_fifo_enqBuf_wires_0_wget__6_BIT_8___d27;
  tUInt8 DEF_m_ref_fifo_ehrReg_1_71_BIT_0___d186;
  tUInt8 DEF_x_first__h9486;
  tUInt8 DEF_y__h8386;
  tUInt8 DEF_x_first__h17127;
  tUInt8 DEF_IF_m_ref_fifo_wires_0_2_whas__94_THEN_m_ref_fi_ETC___d197;
  tUInt8 DEF_v__h18731;
  tUInt8 DEF_IF_m_ref_fifo_wires_0_whas__38_THEN_m_ref_fifo_ETC___d157;
  tUInt8 DEF_IF_fifo_enqBuf_wires_0_whas__5_THEN_fifo_enqBu_ETC___d40;
  tUInt8 DEF_v__h18341;
  tUInt8 DEF_x__h20445;
  tUInt8 DEF_x__h20295;
  tUInt8 DEF_IF_m_ref_fifo_wires_0_1_whas__68_THEN_m_ref_fi_ETC___d187;
  tUInt8 DEF_IF_m_ref_fifo_wires_0_1_whas__68_THEN_m_ref_fi_ETC___d173;
  tUInt8 DEF_IF_m_ref_fifo_wires_0_whas__38_THEN_m_ref_fifo_ETC___d143;
  tUInt8 DEF_IF_fifo_nFull_wires_0_whas__3_THEN_fifo_nFull__ETC___d56;
  tUInt8 DEF_IF_fifo_nEmpty_wires_0_whas__6_THEN_fifo_nEmpt_ETC___d49;
  tUInt32 DEF__0_CONCAT_DONTCARE___d129;
 
 /* Rules */
 public:
  void RL_fifo_enqPtr_canonicalize();
  void RL_fifo_deqPtr_canonicalize();
  void RL_fifo_deqBuf_canonicalize();
  void RL_fifo_enqBuf_canonicalize();
  void RL_fifo_nEmpty_canonicalize();
  void RL_fifo_nFull_canonicalize();
  void RL_fifo_canonicalize();
  void RL_m_ref_fifo_canonicalize();
  void RL_m_ref_fifo_canonicalize_1();
  void RL_m_ref_fifo_canonicalize_2();
  void RL_m_ref_fifo_canonicalize_3();
  void RL_m_ref_fifo_canonicalize_4();
  void RL_m_ref_fifo_pre_canonicalize_one();
  void RL_m_ref_fifo_pre_canonicalize_two();
  void RL_m_ref_fifo_post_canonicalize();
  void RL_m_randomA_every();
  void RL_m_randomA_every_1();
  void RL_m_randomB_every();
  void RL_m_randomB_every_1();
  void RL_m_randomC_every();
  void RL_m_randomC_every_1();
  void RL_m_randomData_every();
  void RL_m_randomData_every_1();
  void RL_m_cycle_print();
  void RL_m_init();
  void RL_m_feed_inputs();
  void RL_m_check_outputs();
  void RL_m_maybe_clear();
  void RL_m_check_fifos_not_full();
  void RL_m_check_fifos_not_empty();
  void RL_m_check_fifos_first();
  void RL_m_stop_tb();
  void RL_m_cycle_inc();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbCFFunctional &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTbCFFunctional &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTbCFFunctional &backing);
};

#endif /* ifndef __mkTbCFFunctional_h__ */
